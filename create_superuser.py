#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Django –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import os
import sys
import django
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ sys.path
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'selexia_travel.settings')
django.setup()

from django.contrib.auth import get_user_model
from django.core.management import execute_from_command_line
from django.conf import settings

User = get_user_model()

def check_env_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
    env_vars = {
        'DEBUG': settings.DEBUG,
        'SECRET_KEY': settings.SECRET_KEY[:20] + '...' if len(settings.SECRET_KEY) > 20 else settings.SECRET_KEY,
        'ALLOWED_HOSTS': settings.ALLOWED_HOSTS,
        'DATABASE_NAME': getattr(settings.DATABASES.get('default', {}), 'NAME', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'),
        'DATABASE_USER': getattr(settings.DATABASES.get('default', {}), 'USER', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'),
        'DATABASE_HOST': getattr(settings.DATABASES.get('default', {}), 'HOST', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'),
        'DATABASE_PORT': getattr(settings.DATABASES.get('default', {}), 'PORT', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'),
        'STATIC_URL': settings.STATIC_URL,
        'MEDIA_URL': settings.MEDIA_URL,
        'STATIC_ROOT': settings.STATIC_ROOT,
        'MEDIA_ROOT': settings.MEDIA_ROOT,
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã
    if hasattr(settings, 'EMAIL_HOST'):
        env_vars.update({
            'EMAIL_HOST': settings.EMAIL_HOST,
            'EMAIL_PORT': settings.EMAIL_PORT,
            'EMAIL_HOST_USER': settings.EMAIL_HOST_USER,
            'EMAIL_USE_TLS': settings.EMAIL_USE_TLS,
            'EMAIL_USE_SSL': getattr(settings, 'EMAIL_USE_SSL', False),
        })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Gmail
    if hasattr(settings, 'GMAIL_CLIENT_ID'):
        env_vars.update({
            'GMAIL_CLIENT_ID': settings.GMAIL_CLIENT_ID[:20] + '...' if len(settings.GMAIL_CLIENT_ID) > 20 else settings.GMAIL_CLIENT_ID,
            'GMAIL_CLIENT_SECRET': '***' if settings.GMAIL_CLIENT_SECRET else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ',
            'GMAIL_REFRESH_TOKEN': '***' if getattr(settings, 'GMAIL_REFRESH_TOKEN', None) else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ',
        })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex
    if hasattr(settings, 'YANDEX_CLIENT_ID'):
        env_vars.update({
            'YANDEX_CLIENT_ID': settings.YANDEX_CLIENT_ID[:20] + '...' if len(settings.YANDEX_CLIENT_ID) > 20 else settings.YANDEX_CLIENT_ID,
            'YANDEX_CLIENT_SECRET': '***' if settings.YANDEX_CLIENT_SECRET else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ',
        })
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redis/Celery
    if hasattr(settings, 'REDIS_URL'):
        env_vars.update({
            'REDIS_URL': settings.REDIS_URL,
        })
    
    if hasattr(settings, 'CELERY_BROKER_URL'):
        env_vars.update({
            'CELERY_BROKER_URL': settings.CELERY_BROKER_URL,
        })
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for key, value in env_vars.items():
        status = "‚úÖ" if value and value != '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ' else "‚ùå"
        print(f"{status} {key}: {value}")
    
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_file = BASE_DIR / '.env'
    if env_file.exists():
        print(f"üìÅ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω: {env_file}")
        with open(env_file, 'r', encoding='utf-8') as f:
            env_lines = f.readlines()
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ .env: {len(env_lines)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π)
            print("üîê –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env:")
            for i, line in enumerate(env_lines[:5]):
                if line.strip() and not line.startswith('#'):
                    key = line.split('=')[0] if '=' in line else line.strip()
                    print(f"   {key}")
            if len(env_lines) > 5:
                print(f"   ... –∏ –µ—â–µ {len(env_lines) - 5} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
    else:
        print(f"‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω: {env_file}")
    
    print()

def create_superuser():
    """–°–æ–∑–¥–∞–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    print("üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if User.objects.filter(is_superuser=True).exists():
        print("‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        superusers = User.objects.filter(is_superuser=True)
        for user in superusers:
            print(f"   üëë {user.username} ({user.email}) - –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        return
    
    print("‚ùå –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –Ω–æ–≤–æ–≥–æ...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        superuser = User.objects.create_superuser(
            username='admin',
            email='admin@gmail.com',
            password='1234',
            first_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            last_name='–°–∏—Å—Ç–µ–º—ã'
        )
        
        print(f"‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        print(f"   üëë –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {superuser.username}")
        print(f"   üìß Email: {superuser.email}")
        print(f"   üîë –ü–∞—Ä–æ–ª—å: 1234")
        print(f"   üÜî ID: {superuser.id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ management –∫–æ–º–∞–Ω–¥—É
        print("üîÑ –ü—Ä–æ–±—É—é —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ management –∫–æ–º–∞–Ω–¥—É...")
        try:
            execute_from_command_line([
                'manage.py', 'createsuperuser',
                '--username', 'admin',
                '--email', 'admin@gmail.com',
                '--noinput'
            ])
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
            user = User.objects.get(username='admin')
            user.set_password('1234')
            user.save()
            
            print("‚úÖ –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ management –∫–æ–º–∞–Ω–¥—É!")
            print(f"   üëë –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}")
            print(f"   üìß Email: {user.email}")
            print(f"   üîë –ü–∞—Ä–æ–ª—å: 1234")
            
        except Exception as e2:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ management –∫–æ–º–∞–Ω–¥—É: {e2}")

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from django.db import connection
        cursor = connection.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ!")
        print(f"   üóÑÔ∏è –í–µ—Ä—Å–∏—è –ë–î: {version[0] if version else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user_count = User.objects.count()
        print(f"   üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        superuser_count = User.objects.filter(is_superuser=True).count()
        print(f"   üëë –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {superuser_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    print("=" * 60)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        check_env_variables()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        check_database()
        
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        create_superuser()
        
        print("=" * 60)
        print("üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        print("\nüìã –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
        print(f"   üåê –ü—Ä–æ–µ–∫—Ç: {BASE_DIR.name}")
        print(f"   üêç Python: {sys.version}")
        print(f"   üéØ Django: {django.get_version()}")
        print(f"   üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
        print(f"   üëë –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.filter(is_superuser=True).count()}")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == '__main__':
    main()
